import {observable, action, autorun, computed, toJS} from 'mobx';

class AppData {
    @observable isLogin = false
    @observable token = "";
    // @observable todos = {};
    // @computed get unfinishedTodoCount() {
    //     return this.todos.filter(todo => !todo.finished).length
    // }
    // @action changeTodos(t) {
    //     this.todos = t
    // }

    @action login() {
        this.isLogin = true;
    }

    @computed get logintoken() {
        if (this.isLogin) {
            localStorage.setItem("isLogin", "true")
            this.token = localStorage.getItem("token")

        } else {
            localStorage.removeItem("isLogin")
            localStorage.removeItem("token")
            this.token = ""
        }
        return this.isLogin
    }

    @action loginout() {
        this.isLogin = false;
    }

    @action setToken(t) {
        this.token = t
    }
}

const store = new AppData()

autorun(() => {
    if (localStorage.getItem("isLogin") === "true") {
        store.isLogin = true
    }
    console.log(store)
    store.logintoken
})

// console.log(store)
export default store